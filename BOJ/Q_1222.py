# https://www.acmicpc.net/problem/1222 문제 제목 : 홍준 프로그래밍 대회 , 언어 : Python, 날짜 : 2020-01-23, 결과 : 실패
# https://www.acmicpc.net/problem/1222 문제 제목 : 홍준 프로그래밍 대회 , 언어 : Python, 날짜 : 2020-02-11, 결과 : 실패
# 처음에 문제를 잘못이해해서 질문게시판을 보다가 소수를 미리 다 구하는 방법도 있다는것을 알게되었지만 틀렸습니다가 뜬다.
# 완벽한줄 알았는데..
# 예전의 내가 쓴 주석들을 보니 정말 멍청했던것 같다.

# 실패코드.2
import sys

N = int(sys.stdin.readline())
list_schools = list(map(int, sys.stdin.readline().split()))
NUM_MAX = max(list_schools)
list_sosu_plus = [1, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409]
list_sosu = [num for num in list_sosu_plus if num <= NUM_MAX]
list_save = [0]*(NUM_MAX+1)
for num in list_sosu:
    #print("===")
    for school in list_schools:
        if num <= (school)**0.5:
            if not school%num:# and num <= int((school)**0.5):
                if not school == num:
                    
                    mogs = school//num
                    #print(num, mogs)
                    if num == mogs:
                        list_save[num] += 1
                    else:
                        list_save[num] += 1
                        list_save[mogs] += 1
        else:
            break
result = 0
for i,count in enumerate(list_save):
    if count >= 2 and result < count * i:
        result = count * i
#print(list_save)
print(result)



# 실패코드.1
import sys
"""
nnnn = int(2000000**0.5+1)+1
list_sosu = [0]*(nnnn+1)

for num in range(2,nnnn+1):
    if not list_sosu[num]:
        i = 2
        while i * num <= nnnn:
            list_sosu[i * num] = 1
            i += 1
print([i for i in range(nnnn+1) if not list_sosu[i]])
"""

list_sosu = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409]
N = int(sys.stdin.readline())
list_schools = list(map(int, sys.stdin.readline().split()))
result = N
for threshold in list_sosu:
    count = 0
    for students in list_schools:
        if students%threshold == 0:
            count += 1
    if count > 1 and count*threshold > result:
        result = count*threshold
print(result)


####################################################################################################################
# https://www.acmicpc.net/problem/1222 문제 제목 : 홍준 프로그래밍 대회 , 언어 : Python, 날짜 : 2020-03-25, 결과 : 성공
"""
    회고:
    처음 잘못생각했던 부분은 2000000까지의 모든 소수를 구한 후 가장 큰 소수로 나누어떨어지는 값을 이용해 답을 구하려 했다.
    하지만 생각해보니 그러면 공약수를 찾을수 없었다. 그래서 곰곰히 생각해보는데 아무리 생각해도 시간초과를 낼까봐 걱정이 되어
    모든 수에 대해 공약수를 찾는 코드를 작성하지 못했다. 그래서 여러 코드들을 살펴봤는데 대부분 직접 공약수를 탐색해 나갔다.
    최근들어 자꾸 실행으로 옮기지 못해 다른분들의 코드를 찾아보는 경우가 굉장히 많아진것같다.
    고쳐야할 습관인것 같다. 또한 내 생각대로 하면 시간초과가 나겠지? 라는 생각을 자주하니깐 아예 직접 시간복잡도에 대해 생각해보는 
    시간을가져봐야겠다.
"""
import sys
list_a = [0]*2000009
N = int(sys.stdin.readline())
list_num = list(map(int, sys.stdin.readline().split()))
result = N
for num in list_num:
    for i in range(1,int(num**0.5)+1):
        if not num%i:
            list_a[i]+=1
            if list_a[i] >= 2 and result < list_a[i] * i:
                result = list_a[i] * i
            if not i == num//i:
                list_a[num//i]+=1
                if list_a[num//i] >= 2 and result < list_a[num//i] * num//i:
                    result = list_a[num//i] * num//i
print(result)
